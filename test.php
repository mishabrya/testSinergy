function search(array $array): string
{
    // Инициализация временного массива для хранения диапазонов
    $tempArray = [];
    // Инициализация итогового массива для хранения строк с диапазонами
    $resultArray = [];
    // Установка начального элемента для поиска последовательности
    $start = $array[0];
    // Счетчик для отслеживания конца последовательной группы
    $end = 0;

    // Проход по каждому элементу в входном массиве
    foreach ($array as $i) {
        // Проверка, является ли текущий элемент последовательным
        if ($i === $start + 1) {
            // Если это первый элемент последовательности
            if ($end === 0) {
                // Добавляем начальный элемент в временный массив
                $tempArray[] = $start;
                // Добавляем текущий элемент в временный массив
                $tempArray[] = $i;
                
                // Удаляем последний элемент в итоговом массиве, если он есть
                if (!empty($resultArray)) {
                    array_pop($resultArray);
                }
            } else {
                // Если последующие элементы, просто добавляем текущий элемент
                $tempArray[] = $i;
            }
            // Увеличиваем счетчик последовательных элементов
            $end++;
        } else {
            // Если последовательность прерывается
            if (!empty($tempArray)) {
                // Формируем строку диапазона и добавляем её в итоговый массив
                $resultArray[] = "{$tempArray[0]} – {$tempArray[count($tempArray) - 1]}";
            }
            // Очищаем временный массив и добавляем текущее число как отдельное
            $tempArray = [];
            $resultArray[] = $i;
            // Сбрасываем счетчик
            $end = 0;
        }
        // Обновляем стартовый элемент для следующей итерации
        $start = $i;
    }
    
    // Проверка и добавление оставшегося диапазона, если есть
    if (!empty($tempArray)) {
        $resultArray[] = "{$tempArray[0]}–{$tempArray[count($tempArray) - 1]}";
    }
    // Возвращаем итоговый массив в виде строки, разделенной запятыми
    return implode(',', $resultArray);
}
